@page
@model IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>@Model.TodoList.Name</h1>

<p>
    <a asp-page="Create" asp-route-id="@Model.TodoList.Id">Add New Task</a>
</p>

@*Add Task*@
<div class="row">
    <div class="col-md-2">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input hidden asp-for="TodoTask.IsCompleted" />
            <div class="form-group">
                <label asp-for="TodoTask.Description" class="control-label"></label>
                <input asp-for="TodoTask.Description" class="form-control" />
                <span asp-validation-for="TodoTask.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TodoTask.DueAt" class="control-label"></label>
                <input asp-for="TodoTask.DueAt" class="form-control" />
                <span asp-validation-for="TodoTask.DueAt" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="TodoTask.IsImportant" />
                    @Html.DisplayNameFor(model => model.TodoTask.IsImportant)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Add new task" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
@*End Add Task*@

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TodoTasks[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TodoTasks[0].DueAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TodoTasks[0].IsImportant)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TodoTasks[0].IsCompleted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var task in Model.TodoTasks)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => task.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => task.DueAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => task.IsImportant)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => task.IsCompleted)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@task.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@task.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@task.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-page="/Lists/Invite" asp-route-id="@Model.TodoList.Id">Invite Collaborator</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}



@*@await Component.InvokeAsync("Tasks")*@
