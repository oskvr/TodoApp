@model IEnumerable<TodoTask>

<ul class="mt-10">
    @foreach (var task in Model)
    {
        <li class="@(task.IsCompleted?"completed-task":"") task hover:bg-gray-50 p-5 border-b">
            <div class="flex items-center justify-between break-all">
                <div class="break-normal pr-5">
                    <form method="post" class="inline-block" asp-page="/Tasks/Index" asp-page-handler="UpdateCheckbox" asp-route-id="@task.Id" asp-route-checkbox="completed">
                        <input asp-for="@task.IsCompleted" onclick="this.form.submit();"
                               class="rounded-full h-5 w-5 text-green-600 hover:text-green-700 cursor-pointer hover:bg-gray-50" />
                    </form>
                    @if (task.IsCompleted)
                    {
                        <span class="ml-2 text-gray-400">
                            <del>
                                @task.Description
                            </del>
                        </span>
                    }
                    else
                    {
                        <span class="ml-2 text-gray-700">
                            @task.Description
                        </span>
                    }
                </div>
                <div class="flex flex-shrink-0 items-center gap-10 mx-5">
                    <div class="flex items-center gap-4 task-options text-gray-500">
                        @*<a class="hover:text-black" asp-route-id="@task.Id" asp-page="./Edit">
                                <img src="~/img/icons/edit-pen.svg" alt="" />
                            </a>*@

                        <form method="post" asp-page="/Tasks/Index" onsubmit="return confirm('The task will be permanently deleted. Do you want to continue?')" asp-page-handler="Delete" asp-route-id="@task.Id">
                            <button class="focus:outline-none text-gray-400 hover:text-black transition">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                                    <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                                </svg>
                            </button>
                        </form>

                    </div>
                    <form method="post" class="inline-block items-baseline" asp-page="/Tasks/Index" asp-page-handler="UpdateCheckbox" asp-route-checkbox="important" asp-route-id="@task.Id">
                        <button class="focus:outline-none text-blue-500 hover:text-blue-600">
                            @if (task.IsImportant)
                            {
                                <span class="checked-star">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
                                        <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
                                    </svg>
                                </span>
                            }
                            else
                            {
                                <span class="unchecked-star">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
                                        <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288l1.847-3.658 1.846 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.564.564 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z" />
                                    </svg>
                                </span>
                            }

                        </button>
                    </form>
                </div>
            </div>
            @if (task.DueAt != null)
            {
                <div class="ml-9">
                    <p class="text-sm @(task.IsCompleted?"text-gray-400":task.IsOverdue?"text-red-500":"text-blue-500") flex gap-2 items-center">
                        <span>
                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-calendar-check" viewBox="0 0 16 16">
                                <path d="M10.854 7.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 9.793l2.646-2.647a.5.5 0 0 1 .708 0z" />
                                <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z" />
                            </svg>
                        </span>
                        <span>
                            @(task.IsOverdue?"Overdue, ": "Due")
                            @if (task.DueAt.Value.Date == DateTime.Today.AddDays(-1))
                            {
                                <span>Yesterday</span>
                            }
                            else if (task.DueAt.Value.Date == DateTime.Today)
                            {
                                <span>Today</span>
                            }
                            else if (task.DueAt.Value.Date == DateTime.Today.AddDays(1))
                            {
                                <span>Tomorrow</span>
                            }
                            else if (task.DueAt.Value.Date < DateTime.Today.AddDays(7))
                            {
                                @task.DueAt.Value.ToString("dddd")
                            }
                            else if (task.DueAt.Value.Year > DateTime.Now.Year)
                            {
                                @task.DueAt.Value.ToShortDateString()
                            }
                            else
                            {
                                @task.DueAt.Value.ToString("ddd, MMMM d")
                            }
                        </span>
                    </p>
                </div>
            }
            <a asp-page="/Tasks/Index" asp-route-id="@task.TodoListId" class="task_list-link text-xs text-gray-500 hover:text-black mt-2 ml-9 hidden">
                @task.TodoList.Name
            </a>
        </li>
    }
</ul>
